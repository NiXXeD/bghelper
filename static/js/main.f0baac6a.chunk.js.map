{"version":3,"sources":["nav/github.svg","shared/TitleContext.js","shared/Tabs.js","shared/Card.js","shared/Checkbox.js","shared/FlexSpacer.js","shared/LabelValueDisplay.js","games/barenpark/achievements/achievementData.js","games/barenpark/achievements/Achievements.js","shared/Dropdown.js","shared/FlexCol.js","shared/FlexRow.js","games/barenpark/setup/setupData.js","games/barenpark/setup/Setup.js","games/barenpark/Barenpark.js","shared/useStorageData.js","shared/TextField.js","games/foodChainMagnate/calc/UnitPrices.js","games/foodChainMagnate/calc/Profit.js","games/foodChainMagnate/calc/BulkHouseSales.js","games/foodChainMagnate/calc/SingleHouseSales.js","games/foodChainMagnate/milestones/milestoneData.js","games/foodChainMagnate/milestones/Milestone.js","games/foodChainMagnate/milestones/Milestones.js","games/foodChainMagnate/modules/ExpansionModule.js","games/foodChainMagnate/modules/expansionModuleData.js","games/foodChainMagnate/modules/ExpansionModules.js","nav/ExpandIcon.js","games/foodChainMagnate/setup/setupData.js","games/foodChainMagnate/setup/Setup.js","games/foodChainMagnate/FoodChainMagnate.js","shared/sample.js","games/tooManyBones/buildATyrant/data.js","games/tooManyBones/buildATyrant/BuildATyrant.js","games/tooManyBones/scenarioRandomizer/gearlocData.js","games/tooManyBones/scenarioRandomizer/tyrantData.js","games/tooManyBones/scenarioRandomizer/ScenarioRandomizer.js","games/tooManyBones/TooManyBones.js","games/games.js","nav/Home.js","nav/SiteSearch.js","nav/Nav.js","shared/TitleContextProvider.js","App.js","index.js","serviceWorker.js"],"names":["module","exports","React","createContext","useStyles","makeStyles","appBar","display","flexDirection","maxHeight","spacer","flex","toolbar","minHeight","title","wordWrap","Tabs","tabs","defaultTab","classes","useState","tabValue","setTabValue","useContext","TitleContext","setTitle","clearTitle","useEffect","Fragment","AppBar","position","color","className","value","onChange","event","variant","scrollButtons","map","index","label","Tab","key","content","Box","Card","children","width","maxWidth","props","style","margin","transition","checkbox","Checkbox","checked","combinedClass","FormControlLabel","control","Switch","target","FlexSpacer","size","height","subheading","marginTop","LabelValueDisplay","dense","containerClass","Typography","component","name","type","game","defaultState","baseGame","badNewsBears","variety","Achievements","setBaseGame","setBadNewsBears","setVariety","selected","setSelected","CardHeader","CardContent","a","CardActions","Button","onClick","disabled","picked","pool","achievementData","filter","Math","floor","random","length","splice","pick","every","push","select","marginBottom","helperText","cursor","userSelect","Dropdown","items","error","errorText","FormControl","InputLabel","htmlFor","Select","input","Input","id","MenuProps","MenuListProps","MenuItem","FormHelperText","col","FlexCol","row","FlexRow","2","toilets","playgrounds","foodStreets","rivers","animalHouses","bearStatues","monorailTowers","monorailCars","grizzlyToilets","grizzlyAnimalHouses","grizzlyBearStatues","players","3","4","playersMenuItems","Object","keys","setupData","Setup","setPlayers","monorails","setMonorails","grizzlies","setGrizzlies","data","FormGroup","Barenpark","useStorageData","localStorageKey","onDataValidate","dataString","localStorage","getItem","parsedData","JSON","parse","removeItem","ex","console","warn","setData","onDataUpdate","useCallback","prop","newData","newValue","stringify","setItem","textField","TextField","UnitPrices","Array","v","i","theme","container","marginRight","right","subheader","textAlign","palette","text","secondary","dollars","fontSize","fontWeight","Profit","unitPrice","normalSales","gardenOrParkSales","gardenAndParkSales","frySales","marketingBonuses","cfo","BulkHouseSales","modules","setUnitPrice","setNormalSales","setGardenOrParkSales","setGardenAndParkSales","setMarketingBonuses","setFrySales","setCfo","cfoMultiplier","normalProfit","gardenOrParkProfit","gardenAndParkProfit","fryProfit","marketingProfit","profit","ceil","lobbyists","fryChefs","itemsSoldMenuItems","_","bonusSalesMenuItems","bonusItemsSold","garden","park","itemsSold","coffeeSold","specialItemsSold","friesSold","SingleHouseSales","setBonusItemsSold","setGarden","setPark","setItemsSold","setSpecialItemsSold","setFriesSold","salesError","bonusError","salesDollars","bonusDollars","bonusMultiplier","coffee","kimchi","sushi","noodles","base","hardChoices","maxRound","newMilestones","ketchup","fontColor","ruralMarketers","milestone","border","borderRadius","textTransform","checkmark","marginLeft","x","Milestone","backgroundColor","milestoneModules","padding","Milestones","onDataChanged","milestones","milestoneState","setMilestoneState","useMemo","milestoneData","reduce","acc","val","sort","b","localeCompare","updateMilestoneType","milestoneTypeData","milestoneChanged","newMilestoneState","handleReset","milestoneType","some","Grid","minWidth","ExpansionModule","setModules","description","leftColumn","rightColumn","ExpansionModules","onModulesChanged","expansionModuleData","closed","transform","primary","open","ExpandIcon","byPlayer","mapSize","employees","billboards","reserve","5","6","byModule","newDistricts","nightShiftManagers","massMarketers","gourmetFoodCritics","movieStars","reservePrices","expandButton","playerItem","setOpen","moduleSetup","Tooltip","enterDelay","IconButton","Collapse","in","timeout","unmountOnExit","moduleItem","FoodChainMagnate","handleModulesChanged","newModules","alwaysRender","hp","ini","att","def","types","BuildATyrant","increment","setIncrement","onePool","fivePool","sample","max","includes","baddies","gearlocMenuItems","ScenarioRandomizer","gearlocCount","setGearlocCount","gearlocPool","gearlocData","gearlocs","tyrantPool","tyrantData","tyrant","gearloc","TooManyBones","path","Home","excludedTags","autocomplete","dialogPaper","overflowY","dialogRoot","top","bottom","popup","zIndex","SiteSearch","history","useHistory","dialogOpen","setDialogOpen","setValue","openDialog","closeDialog","useRef","handleKeyUp","tagName","current","setTimeout","focus","document","addEventListener","removeEventListener","Dialog","keepMounted","onClose","paper","root","Autocomplete","autoComplete","autoHightlight","clearOnEscape","options","games","getOptionLabel","option","renderInput","params","fullWidth","inputRef","drawerPaper","paddingLeft","paddingRight","nested","spacing","link","textDecoration","Nav","expandedMenu","setExpandedMenu","drawerOpen","setDrawerOpen","openDrawer","closeDrawer","handleExpand","Toolbar","menuButton","href","alt","src","githubSvg","SwipeableDrawer","onOpen","to","ListItem","button","ListItemIcon","ListItemText","Divider","List","defaultTitle","TitleContextProvider","Provider","createMuiTheme","App","Component","ThemeProvider","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0baac6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.7337e417.svg\";","import React from 'react'\n\nexport default React.createContext({})\n","import React, {useContext, useEffect, useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport AppBar from '@material-ui/core/AppBar'\nimport MuiTabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport TitleContext from './TitleContext'\nimport Box from '@material-ui/core/Box'\n\nfunction Tabs({tabs, title, defaultTab = 0}) {\n    const classes = useStyles()\n    const [tabValue, setTabValue] = useState(defaultTab)\n    const handleChange = (event, value) => setTabValue(value)\n\n    const {setTitle, clearTitle} = useContext(TitleContext)\n    useEffect(() => {\n        setTitle(title)\n        return () => clearTitle()\n    }, [clearTitle, setTitle, title])\n\n    return (\n        <React.Fragment>\n            {/* Tabs */}\n            <AppBar position='static' color='default' className={classes.appBar}>\n                <MuiTabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    variant='scrollable'\n                    scrollButtons='auto'\n                >\n                    {tabs.map(({label}, index) => <Tab key={index} label={label}/>)}\n                </MuiTabs>\n            </AppBar>\n\n            {/* Content area */}\n            {tabs.map(({content}, index) =>\n                <Box key={index} display={tabValue === index ? 'block' : 'none'}>{content}</Box>\n            )}\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    appBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        maxHeight: 48\n    },\n    spacer: {\n        flex: 1\n    },\n    toolbar: {\n        minHeight: 48\n    },\n    title: {\n        wordWrap: 'none'\n    }\n})\n\nexport default Tabs\n","import React from 'react'\nimport MuiCard from '@material-ui/core/Card'\n\nfunction Card({children, width = 300, maxWidth = width, ...props}) {\n    const style = {width, maxWidth, margin: 16, transition: 'width 1s'}\n    return <MuiCard style={style} {...props}>{children}</MuiCard>\n}\n\nexport default Card\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nfunction Checkbox({className, label, checked, onChange}) {\n    const classes = useStyles()\n    const combinedClass = classes.checkbox + (className ? ' ' + className : '')\n    return (\n        <FormControlLabel\n            label={label}\n            className={combinedClass}\n            control={\n                <Switch\n                    checked={checked}\n                    onChange={({target}) => onChange(target.checked)}\n                />\n            }\n        />\n    )\n}\n\nconst useStyles = makeStyles({\n    checkbox: {\n        display: 'block'\n    }\n})\n\nexport default Checkbox\n","import React from 'react'\n\nfunction FlexSpacer({size}) {\n    const style = size ? {height: size, width: size} : {flex: 1}\n    return (\n        <div style={style}/>\n    )\n}\n\nexport default FlexSpacer\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nfunction LabelValueDisplay({className, label, value, dense}) {\n    const classes = useStyles()\n    const containerClass = (className || '') + (dense ? '' : ' ' + classes.subheading)\n    return (\n        <div className={containerClass}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"div\">\n                {label}\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\">\n                {value}\n            </Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    subheading: {\n        marginTop: 16\n    }\n})\n\nexport default LabelValueDisplay\n","export default [\n    // Base Game\n    {name: 'Polar Bears', type: 'animalHouses', game: 'base'},\n    {name: 'Gobi Bears', type: 'animalHouses', game: 'base'},\n    {name: 'Koalas', type: 'animalHouses', game: 'base'},\n    {name: 'Pandas', type: 'animalHouses', game: 'base'},\n    {name: 'Green Areas', type: 'greenTiles', game: 'base'},\n    {name: 'Long Food Street', type: 'greenTiles', game: 'base'},\n    {name: 'Long River', type: 'greenTiles', game: 'base'},\n    {name: 'Enclosures', type: 'enclosures', game: 'base'},\n    {name: 'Animal Houses', type: 'animalHouse', game: 'base'},\n    {name: 'Twice is Nice', type: 'bearStatues', game: 'base'},\n\n    // Bad News Bears\n    {name: 'Construction Freeze', type: 'enclosures', game: 'badNewsBears'},\n    {name: 'Enclosure Planning', type: 'enclosures', game: 'badNewsBears'},\n    {name: 'Toilets Apart', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Food Street Connections', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Rivers in Corners', type: 'greenTiles', game: 'badNewsBears'},\n    {name: 'Playgrounds with Statues', type: 'bearStatues', game: 'badNewsBears'}\n]\n","import {CardActions} from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport React, {useState} from 'react'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '../../../shared/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Checkbox from '../../../shared/Checkbox'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport achievementData from './achievementData'\n\nfunction Achievements() {\n    const [baseGame, setBaseGame] = useState(defaultState.baseGame)\n    const [badNewsBears, setBadNewsBears] = useState(defaultState.badNewsBears)\n    const [variety, setVariety] = useState(defaultState.variety)\n    const [selected, setSelected] = useState(null)\n\n    const handleReset = () => {\n        setBaseGame(defaultState.baseGame)\n        setBadNewsBears(defaultState.badNewsBears)\n        setVariety(defaultState.variety)\n        setSelected(null)\n    }\n\n    const handleRanzomize = () => {\n        let picked = []\n        let pool = [...achievementData]\n            .filter(a => (baseGame && a.game === 'base') || (badNewsBears && a.game === 'badNewsBears'))\n\n        while (picked.length < 3 && pool.length > 0) {\n            // Randomly pick from the list\n            const index = Math.floor(Math.random() * Math.floor(pool.length))\n            const [pick] = pool.splice(index, 1)\n            if (!variety || picked.every(a => a.type !== pick.type)) picked.push(pick)\n        }\n        setSelected(picked)\n    }\n\n    return (\n        <Card>\n            <CardHeader title=\"Achievement Selector\"/>\n            <CardContent>\n                <LabelValueDisplay\n                    dense\n                    label='Options'\n                    value={\n                        <React.Fragment>\n                            <Checkbox label=\"Base Game\" checked={baseGame} onChange={setBaseGame}/>\n                            <Checkbox label=\"Bad News Bears\" checked={badNewsBears} onChange={setBadNewsBears}/>\n                            <Checkbox label=\"Variety\" checked={variety} onChange={setVariety}/>\n                        </React.Fragment>\n                    }\n                />\n\n                <LabelValueDisplay\n                    label='Selected Achievements'\n                    value={\n                        <React.Fragment>\n                            {\n                                !selected &&\n                                <Typography>Press <i>Randomize</i> below to randomly select achievements!</Typography>\n                            }\n\n                            {\n                                selected &&\n                                <React.Fragment>\n                                    {selected.map((a, index) =>\n                                        <LabelValueDisplay key={index} label={`Achievement ${index + 1}`}\n                                                           value={a.name}/>\n                                    )}\n\n                                    <FlexSpacer size={16}/>\n\n                                    <Typography variant='caption' color='textSecondary'>\n                                        Don't forget to remove the lowest value achievement for 2 player games!\n                                    </Typography>\n                                </React.Fragment>\n                            }\n                        </React.Fragment>\n                    }\n                />\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={handleReset}>Reset</Button>\n                <FlexSpacer/>\n                <Button color=\"primary\" disabled={!baseGame && !badNewsBears} onClick={handleRanzomize}>\n                    Randomize\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    baseGame: true,\n    badNewsBears: true,\n    variety: true\n}\n\nexport default Achievements\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction Dropdown({label, value, onChange, items, error, errorText, helperText}) {\n    const classes = useStyles()\n    return (\n        <FormControl className={classes.select}>\n            <InputLabel htmlFor={label}>{label}</InputLabel>\n            <Select\n                value={value}\n                onChange={({target}) => onChange(target.value)}\n                input={<Input id={label}/>}\n                MenuProps={{\n                    MenuListProps: {\n                        style: {\n                            maxHeight: 256\n                        }\n                    }\n                }}\n            >\n                {items.map(({label, value}, key) => <MenuItem key={key} value={value}>{label}</MenuItem>)}\n            </Select>\n            {!error && helperText && <FormHelperText className={classes.helperText}>{helperText}</FormHelperText>}\n            {error && <FormHelperText error className={classes.helperText}>{errorText}</FormHelperText>}\n        </FormControl>\n    )\n}\n\nconst useStyles = makeStyles({\n    select: {\n        marginBottom: 16\n    },\n    helperText: {\n        cursor: 'default',\n        userSelect: 'none'\n    }\n})\n\nexport default Dropdown\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction FlexCol({children, width}) {\n    const classes = useStyles()\n    const style = width ? {width} : null\n    return (\n        <div className={classes.col} style={style}>{children}</div>\n    )\n}\n\nconst useStyles = makeStyles({\n    col: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n})\n\nexport default FlexCol\n","import {makeStyles} from '@material-ui/styles'\nimport React from 'react'\n\nfunction FlexRow({children}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.row}>{children}</div>\n    )\n}\n\nconst useStyles = makeStyles({\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default FlexRow\n","export default {\n    2: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 8,\n        rivers: 8,\n        animalHouses: '2, 4, 6',\n        bearStatues: 'Evens; 2 - 16',\n        monorailTowers: 14,\n        monorailCars: '2 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2, 4, 6, 8',\n        grizzlyBearStatues: 'Evens; 2 - 20',\n        players: ['Toilet', 'Playground']\n    },\n    3: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 12,\n        rivers: 12,\n        animalHouses: '2 - 6',\n        bearStatues: '3 - 14',\n        monorailTowers: 21,\n        monorailCars: '3 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '2 - 7',\n        grizzlyBearStatues: '3 - 17',\n        players: ['Toilet', 'Playground', 'Food Street']\n    },\n    4: {\n        toilets: 10,\n        playgrounds: 10,\n        foodStreets: 16,\n        rivers: 16,\n        animalHouses: '1 - 7',\n        bearStatues: '1 - 16',\n        monorailTowers: 28,\n        monorailCars: '4 each; 10, 8, 6, 5, 4, 3',\n        grizzlyToilets: 18,\n        grizzlyAnimalHouses: '1 - 8',\n        grizzlyBearStatues: '1 - 20',\n        players: ['Toilet', 'Playground', 'Playground', 'Food Street']\n    }\n}\n","import React, {useState} from 'react'\nimport {CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Card from '../../../shared/Card'\nimport Checkbox from '../../../shared/Checkbox'\nimport Dropdown from '../../../shared/Dropdown'\nimport FlexCol from '../../../shared/FlexCol'\nimport FlexRow from '../../../shared/FlexRow'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport setupData from './setupData'\n\nfunction Setup() {\n    const [players, setPlayers] = useState(2)\n    const [monorails, setMonorails] = useState(true)\n    const [grizzlies, setGrizzlies] = useState(true)\n    const data = setupData[players]\n\n    return (\n        <Card width={350}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    <Dropdown label='Players' value={players} onChange={setPlayers} items={playersMenuItems}/>\n\n                    <FlexRow>\n                        <Checkbox label=\"Monorails\" checked={monorails} onChange={setMonorails}/>\n                        <FlexSpacer size={16}/>\n                        <Checkbox label=\"Grizzlies\" checked={grizzlies} onChange={setGrizzlies}/>\n                    </FlexRow>\n\n                    <FlexRow>\n                        <LabelValueDisplay\n                            label='Starting Tile'\n                            value={\n                                <FlexRow>\n                                    <FlexCol width={140}>\n                                        <span><b>P1:</b>&nbsp;Toilet</span>\n                                        {players > 2 && <span><b>P3:</b>&nbsp;Playground</span>}\n                                    </FlexCol>\n                                    <FlexCol width={140}>\n                                        <span><b>P2:</b>&nbsp;Playground</span>\n                                        {players > 3 && <span><b>P4:</b>&nbsp;Food Street</span>}\n                                    </FlexCol>\n                                </FlexRow>\n                            }\n                        />\n                    </FlexRow>\n\n                    <FlexRow>\n                        <FlexCol width={140}>\n                            <LabelValueDisplay label='Toilets' value={grizzlies ? data.grizzlyToilets : data.toilets}/>\n                            <LabelValueDisplay label='Playgrounds' value={data.playgrounds}/>\n                            <LabelValueDisplay\n                                label='Animal Houses'\n                                value={grizzlies ? data.grizzlyAnimalHouses : data.animalHouses}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Towers' value={data.monorailTowers}/>}\n                        </FlexCol>\n\n                        <FlexSpacer size={24}/>\n\n                        <FlexCol width={140}>\n                            <LabelValueDisplay label='Food Streets' value={data.foodStreets}/>\n                            <LabelValueDisplay label='Rivers' value={data.rivers}/>\n                            <LabelValueDisplay\n                                label='Bear Statues'\n                                value={grizzlies ? data.grizzlyBearStatues : data.bearStatues}\n                            />\n                            {monorails && <LabelValueDisplay label='Monorail Cars' value={data.monorailCars}/>}\n                        </FlexCol>\n                    </FlexRow>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst playersMenuItems = Object.keys(setupData).map(value => ({label: `${value} players`, value}))\n\nexport default Setup\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport Achievements from './achievements/Achievements'\nimport Setup from './setup/Setup'\n\nfunction Barenpark() {\n    const tabs = [\n        {label: 'Setup', content: <Setup/>},\n        {label: 'Achievements', content: <Achievements/>}\n    ]\n    return <Tabs title='Bärenpark' tabs={tabs}/>\n\n}\n\nexport default Barenpark\n","import {useCallback, useState} from 'react'\n\nfunction useStorageData({localStorageKey, onDataValidate}) {\n    const [data = {}, setData] = useState(() => {\n        try {\n            const dataString = localStorage.getItem(localStorageKey) || '{}'\n            const parsedData = JSON.parse(dataString) || {}\n            if (onDataValidate && !onDataValidate(parsedData)) {\n                localStorage.removeItem(localStorageKey)\n                return {}\n            }\n            return parsedData\n        } catch (ex) {\n            console.warn('Error loading local storage data: ', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return {}\n    })\n\n    const onDataUpdate = useCallback((prop, value) => {\n        const newData = {...data, [prop]: value}\n        setData(newData)\n        const newValue = JSON.stringify(newData)\n        localStorage.setItem(localStorageKey, newValue)\n    }, [data, localStorageKey])\n\n    return {data, onDataUpdate}\n}\n\nexport default useStorageData\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport {makeStyles} from '@material-ui/styles'\nimport React from 'react'\nimport MuiTextField from '@material-ui/core/TextField'\n\nfunction TextField({label, value, onChange, type, error, errorText, helperText}) {\n    const classes = useStyles()\n    return (\n        <FormControl className={classes.textField}>\n            <MuiTextField\n                label={label}\n                value={value}\n                type={type}\n                onChange={({target}) => onChange(target.value)}\n            />\n            {!error && helperText && <FormHelperText className={classes.helperText}>{helperText}</FormHelperText>}\n            {error && <FormHelperText error className={classes.helperText}>{errorText}</FormHelperText>}\n        </FormControl>\n    )\n}\n\nconst useStyles = makeStyles({\n    textField: {\n        marginBottom: 16\n    },\n    helperText: {\n        cursor: 'default',\n        userSelect: 'none'\n    }\n})\n\nexport default TextField\n","import React from 'react'\nimport Dropdown from '../../../shared/Dropdown'\n\nfunction UnitPrices(props) {\n    const items = [...new Array(36)]\n        .map((v, i) => i - 5)\n        .map(value => ({label: `$${value}`, value}))\n\n    return (\n        <Dropdown\n            label='Unit Price'\n            items={items}\n            helperText='Final sale price of goods sold.'\n            {...props}\n        />\n    )\n}\n\nexport default UnitPrices\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Profit({value = 0}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.subheader}>Profit</div>\n            <div className={classes.dollars}>{`$${value}`}</div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginRight: 16,\n        marginBottom: 16,\n        width: '100%',\n        display: 'inline-block',\n        right: 0\n    },\n    subheader: {\n        textAlign: 'right',\n        color: theme.palette.text.secondary\n    },\n    dollars: {\n        fontSize: '38px',\n        fontWeight: 'bold',\n        color: 'darkgreen',\n        textAlign: 'right'\n    }\n}))\n\nexport default Profit\n","import React, {useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Button from '@material-ui/core/Button'\nimport TextField from '../../../shared/TextField'\nimport Checkbox from '../../../shared/Checkbox'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\n\nfunction BulkHouseSales({modules}) {\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n    const [normalSales, setNormalSales] = useState(defaultState.normalSales)\n    const [gardenOrParkSales, setGardenOrParkSales] = useState(defaultState.gardenOrParkSales)\n    const [gardenAndParkSales, setGardenAndParkSales] = useState(defaultState.gardenAndParkSales)\n    const [marketingBonuses, setMarketingBonuses] = useState(defaultState.marketingBonuses)\n    const [frySales, setFrySales] = useState(defaultState.frySales)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const normalProfit = normalSales * unitPrice\n    const gardenOrParkProfit = gardenOrParkSales * unitPrice * 2\n    const gardenAndParkProfit = gardenAndParkSales * unitPrice * 3\n    const fryProfit = frySales * 10\n    const marketingProfit = (marketingBonuses * 5)\n    const profit = Math.ceil(cfoMultiplier * (normalProfit + gardenOrParkProfit + gardenAndParkProfit + marketingProfit + fryProfit))\n\n    const reset = () => {\n        setUnitPrice(defaultState.unitPrice)\n        setNormalSales(defaultState.normalSales)\n        setGardenOrParkSales(defaultState.gardenOrParkSales)\n        setGardenAndParkSales(defaultState.gardenAndParkSales)\n        setMarketingBonuses(defaultState.marketingBonuses)\n        setFrySales(defaultState.frySales)\n        setCfo(defaultState.cfo)\n    }\n\n    return (\n        <Card width='auto' maxWidth={375}>\n            <CardHeader title='Bulk Sale Calculator'/>\n            <CardContent>\n                <FormGroup>\n                    <UnitPrices value={unitPrice} onChange={setUnitPrice}/>\n\n                    <TextField\n                        type='number'\n                        label='Normal Sales'\n                        value={normalSales}\n                        onChange={setNormalSales}\n                        helperText='Regular demand, Coffee, Kimchi, Sushi, and/or Noodles.'\n                    />\n\n                    <TextField\n                        type='number'\n                        label='Either Garden or Park Sales'\n                        value={gardenOrParkSales}\n                        onChange={setGardenOrParkSales}\n                        helperText='Items sold on either Garden or Park (not both).'\n                    />\n\n                    {\n                        modules.lobbyists &&\n                        <TextField\n                            type='number'\n                            label='Both Garden and Park Sales'\n                            value={gardenAndParkSales}\n                            onChange={setGardenAndParkSales}\n                            helperText='Items sold on both Garden and Park.'\n                        />\n                    }\n                    <TextField\n                        type='number'\n                        label='Marketing Bonuses'\n                        value={marketingBonuses}\n                        onChange={setMarketingBonuses}\n                        helperText='Bonuses from first sale milestones.'\n                    />\n\n                    {\n                        modules.fryChefs &&\n                        <TextField\n                            type='number'\n                            label='Fry Sales'\n                            value={frySales}\n                            onChange={setFrySales}\n                            helperText='Number of fries sold.'\n                        />\n                    }\n                    <Checkbox label='CFO Bonus' checked={cfo} onChange={setCfo}/>\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color='secondary' onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    unitPrice: 10,\n    normalSales: 0,\n    gardenOrParkSales: 0,\n    gardenAndParkSales: 0,\n    frySales: 0,\n    marketingBonuses: 0,\n    cfo: false\n}\n\nexport default BulkHouseSales\n","import React, {useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '../../../shared/Checkbox'\nimport Dropdown from '../../../shared/Dropdown'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\n\nfunction SingleHouseSales({modules}) {\n    const [bonusItemsSold, setBonusItemsSold] = useState(defaultState.bonusItemsSold)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n    const [garden, setGarden] = useState(defaultState.garden)\n    const [park, setPark] = useState(defaultState.park)\n    const [itemsSold, setItemsSold] = useState(defaultState.itemsSold)\n    const [specialItemsSold, setSpecialItemsSold] = useState(defaultState.specialItemsSold)\n    const [friesSold, setFriesSold] = useState(defaultState.friesSold)\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n\n    const salesError = !garden && itemsSold > 3\n    const bonusError = bonusItemsSold > itemsSold\n\n    const salesDollars = unitPrice * itemsSold\n    const bonusDollars = bonusItemsSold * 5\n    const bonusMultiplier = 1 + (garden ? 1 : 0) + (park ? 1 : 0)\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const profit = Math.ceil(((salesDollars * bonusMultiplier) + bonusDollars) * cfoMultiplier)\n\n    const reset = () => {\n        setBonusItemsSold(defaultState.bonusItemsSold)\n        setCfo(defaultState.cfo)\n        setGarden(defaultState.garden)\n        setPark(defaultState.park)\n        setItemsSold(defaultState.itemsSold)\n        setSpecialItemsSold(defaultState.specialItemsSold)\n        setFriesSold(defaultState.friesSold)\n        setUnitPrice(defaultState.unitPrice)\n    }\n\n    return (\n        <Card>\n            <CardHeader title='Single Sale Calculator'/>\n            <CardContent>\n                <FormGroup>\n                    <UnitPrices\n                        value={unitPrice}\n                        onChange={setUnitPrice}\n                    />\n\n                    <Dropdown\n                        label='Items Sold'\n                        value={itemsSold}\n                        onChange={setItemsSold}\n                        items={itemsSoldMenuItems}\n                        error={salesError}\n                        errorText='Items sold must be at most 3 for regular house.'\n                        helperText='Regular demand items sold.'\n                    />\n\n                    <Dropdown\n                        label='Marketing Bonuses'\n                        value={bonusItemsSold}\n                        onChange={setBonusItemsSold}\n                        items={bonusSalesMenuItems}\n                        error={bonusError}\n                        errorText='Marketing bonuses may not exceed items sold.'\n                        helperText='Bonuses from first sale milestones.'\n                    />\n\n                    {\n                        (modules.coffee || modules.kimchi || modules.sushi || modules.noodles) &&\n                        <Dropdown\n                            label='Special Items Sold'\n                            value={specialItemsSold}\n                            onChange={setSpecialItemsSold}\n                            items={itemsSoldMenuItems}\n                            helperText='Includes Coffee, Kimchi, Sushi, and Noodles.'\n                        />\n                    }\n\n                    {\n                        modules.fryChefs &&\n                        <Dropdown\n                            label='Fries Sold'\n                            value={friesSold}\n                            onChange={setFriesSold}\n                            items={itemsSoldMenuItems}\n                            helperText='Includes Coffee, Kimchi, Sushi, and Noodles.'\n                        />\n                    }\n                    <Checkbox label='Garden House' checked={garden} onChange={setGarden}/>\n                    {modules.lobbyists && <Checkbox label='Park Bonus' checked={park} onChange={setPark}/>}\n                    <Checkbox label='CFO Bonus' checked={cfo} onChange={setCfo}/>\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color='secondary' onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst itemsSoldMenuItems = [...new Array(26)].map((_, value) => ({label: `${value} item(s) sold`, value}))\nconst bonusSalesMenuItems = [...new Array(26)].map((_, value) => ({label: `${value} bonus(es)`, value}))\n\nconst defaultState = {\n    bonusItemsSold: 0,\n    cfo: false,\n    garden: false,\n    park: false,\n    itemsSold: 1,\n    coffeeSold: 0,\n    specialItemsSold: 0,\n    friesSold: 0,\n    unitPrice: 10\n}\n\nexport default SingleHouseSales\n","export default {\n    base: [\n        {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person.'},\n        {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries.'},\n        {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees.'},\n        {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items.'},\n        {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2.'},\n        {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards.'},\n        {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n        {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook.'},\n        {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook.'},\n        {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n        {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold.'},\n        {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold.'},\n        {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold.'},\n        {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play.'},\n        {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1.'},\n        {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source.'},\n        {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1.'},\n        {color: '#EAA791', title: 'to lower prices', text: 'Price -$1.'}\n    ],\n    hardChoices: [\n        {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees.', maxRound: 3},\n        {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries.'},\n        {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n        {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items.'},\n        {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook.'},\n        {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold.', maxRound: 2},\n        {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2.'},\n        {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook.'},\n        {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold.', maxRound: 2},\n        {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards.'},\n        {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source.'},\n        {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold.', maxRound: 2},\n        {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n        {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1.'},\n        {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play.'},\n        {color: '#EAA791', title: 'to lower prices', text: 'Price -$1.'},\n        {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person.'},\n        {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1.'}\n    ],\n    newMilestones: [\n        {color: '#98C2C9', title: 'marketeer used', text: '$5 for every good your marketeers market; Distance -2.', maxRound: 2},\n        {color: '#98C2C9', title: 'marketing trainee used', text: '+1 Kitchen Trainee and +1 Errand Boy.'},\n        {color: '#98C2C9', title: 'campaign manager used', text: 'This turn, may place 1 marketing tile with same type, duration and range.'},\n        {color: '#98C2C9', title: 'brand manager used', text: 'This turn, may place 2 different goods on 1 plane.'},\n        {color: '#98C2C9', title: 'brand director used', text: 'Your radio is permanent.'},\n        {color: '#95A968', title: 'burger sold', text: 'Your CEO always has 4 slots (regardless of reserve cards).'},\n        {color: '#95A968', title: 'pizza sold', text: 'Place radio (pizza, 2 turns) on tile of each house that bought pizza.'},\n        {color: '#A9CB94', title: 'lemonade sold', text: 'Any employee can be trained on the job, preserving color.'},\n        {color: '#A9CB94', title: 'beer sold', text: 'May pay salary with food or drink.'},\n        {color: '#A9CB94', title: 'coke sold', text: 'Get a freezer that stores 10 items.'},\n        {color: '#A9CB94', title: 'cart operator used', text: 'Double amount of drinks hauled by cart/truck/zeppelin.'},\n        {color: '#BDB6B3', title: 'recruiting girl used', text: 'Get a free executive vice president; Pay no salary for him.', maxRound: 2},\n        {color: '#BDB6B3', title: 'trainer used', text: '+1 trainer; No longer need to fire employees if broke.', maxRound: 2},\n        {color: '#EAA791', title: 'discount manager used', text: 'Remove $100 from the bank each round you discount by $3 or more..'},\n        {color: '#AF95C2', title: 'house built', text: 'May use multiple trainers on the same person.'},\n        {color: '#AF95C2', title: 'waitress used', text: 'Your salaries are $3 each.'},\n        {color: '#cc0000', title: 'new restaurant', text: 'Place a permanent mailbox in restaurant area.'}\n    ],\n    ketchup: [\n        {color: '#222222', fontColor: '#FFFFFF', title: 'demand fulfulled by someone else', text: 'Distance -1.'}\n    ],\n    lobbyists: [\n        {color: '#AF95C2', title: 'lobbyist used', text: 'Add 1 tile to the city.'}\n    ],\n    coffee: [\n        {color: '#8AC3A0', title: 'coffee sold', text: 'Build one coffee shop in the next clean up phase.'}\n    ],\n    ruralMarketers: [\n        {color: '#98C2C9', title: 'rural marketer used', text: 'Place highway offramp.'}\n    ]\n}\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport FlexSpacer from '../../../shared/FlexSpacer'\n\nfunction Milestone({index, milestone, onChange, value}) {\n    const classes = useStyles()\n    const {color, fontColor = '#000000', title, text, maxRound} = milestone\n\n    const handleClick = () => {\n        let nextValue\n        if (!value || value === 'available') nextValue = 'mine'\n        else if (value === 'mine') nextValue = 'unavailable'\n        else nextValue = 'available'\n\n        return onChange(index, nextValue)\n    }\n\n    return (\n        <div\n            className={classes.milestone}\n            style={{backgroundColor: color}}\n            onClick={handleClick}\n        >\n            {value === 'mine' && <div className={classes.checkmark}>✓</div>}\n            {value === 'unavailable' && <div className={classes.x}>✗</div>}\n            <div className={classes.container}>\n                <div className={classes.title} style={{color: fontColor}}>First {title}</div>\n                <div className={classes.text} style={{color: fontColor}}>{text}</div>\n                <FlexSpacer/>\n                {\n                    maxRound && <div className={classes.maxRound}>Remove after <br/>round {maxRound}</div>}\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    milestone: {\n        margin: 4,\n        width: 155,\n        height: 155,\n        userSelect: 'none',\n        cursor: 'pointer',\n        border: '1px solid black',\n        borderRadius: 10\n    },\n    container: {\n        margin: 4,\n        height: 145,\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    title: {\n        textAlign: 'center',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        marginBottom: 12,\n        color: '#000'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 'small',\n        color: '#000'\n    },\n    maxRound: {\n        width: 145,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        color: '#f00'\n    },\n    checkmark: {\n        fontSize: 'xx-large',\n        color: '#0f0',\n        position: 'absolute',\n        marginTop: 115,\n        marginLeft: 7\n    },\n    x: {\n        fontSize: 'xx-large',\n        color: '#f00',\n        position: 'absolute',\n        marginTop: 115,\n        marginLeft: 7\n    }\n})\n\nexport default Milestone\n","import {makeStyles} from '@material-ui/styles'\nimport React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport Card from '../../../shared/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport milestoneData from './milestoneData'\nimport Milestone from './Milestone'\n\nfunction Milestones({modules, data, onDataChanged}) {\n    const classes = useStyles()\n    const [milestoneState, setMilestoneState] = useState(data.milestones || [])\n\n    const milestones = useMemo(() => {\n        return [\n            ...(!modules.hardChoices && !modules.newMilestones ? milestoneData.base : []),\n            ...(modules.hardChoices && !modules.newMilestones ? milestoneData.hardChoices : []),\n            ...(milestoneModules\n                    .map(module => modules[module] ? milestoneData[module] : null)\n                    .filter(x => x)\n                    .reduce((acc, val) => ([...acc, ...val]), [])\n            ),\n        ].sort((a, b) => a.color.localeCompare(b.color))\n    }, [modules])\n\n    const updateMilestoneType = useCallback(() => {\n        const milestoneTypeData = milestoneModules.reduce((acc, val) => {\n            acc[val] = modules[val]\n            return acc\n        }, {})\n        onDataChanged('milestoneType', milestoneTypeData)\n    }, [modules, onDataChanged])\n\n    const milestoneChanged = (index, value) => {\n        const newMilestoneState = [...milestoneState]\n        newMilestoneState[index] = value\n        setMilestoneState(newMilestoneState)\n        onDataChanged('milestones', newMilestoneState)\n        updateMilestoneType()\n    }\n\n    const handleReset = useCallback(() => {\n        setMilestoneState([])\n        onDataChanged('milestones', [])\n        updateMilestoneType()\n    }, [onDataChanged, updateMilestoneType])\n\n    useEffect(() => {\n        const {milestoneType = {}} = data\n        const modulesChanged = milestoneModules.some(module => milestoneType[module] !== modules[module])\n        if (modulesChanged) handleReset()\n    }, [data, modules, handleReset])\n\n    return (\n        <Card width='auto' maxWidth={845}>\n            <CardHeader title='Milestone Tracker'/>\n            <CardContent className={classes.content}>\n                <Grid container>\n                    {milestones.map((value, index) =>\n                        <Milestone\n                            key={index}\n                            index={index}\n                            milestone={value}\n                            value={milestoneState[index]}\n                            onChange={milestoneChanged}\n                        />\n                    )}\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Button color='secondary' onClick={handleReset}>Reset</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst milestoneModules = [\n    'newMilestones',\n    'coffee',\n    'lobbyists',\n    'ruralMarketers',\n    'ketchup'\n]\n\nconst useStyles = makeStyles({\n    content: {\n        padding: 8\n    }\n})\n\nexport default Milestones\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport React from 'react'\nimport Checkbox from '../../../shared/Checkbox'\n\nfunction ExpansionModule({label, prop, modules, setModules}) {\n    const classes = useStyles()\n    const handleChange = value => setModules({...modules, [prop]: value})\n    return (\n        <Checkbox\n            className={classes.checkbox}\n            label={label}\n            checked={modules[prop] || false}\n            onChange={handleChange}\n        />\n    )\n}\n\nconst useStyles = makeStyles({\n    checkbox: {\n        minWidth: 225\n    }\n})\n\nexport default ExpansionModule\n","export default [\n    {label: 'New Districts', prop: 'newDistricts'},\n    {label: 'Lobbyists', prop: 'lobbyists'},\n    {label: 'New Milestones', prop: 'newMilestones'},\n    {label: 'Coffee', prop: 'coffee'},\n    {label: 'Kimchi', prop: 'kimchi'},\n    {label: 'Sushi', prop: 'sushi'},\n    {label: 'Noodles', prop: 'noodles'},\n    {label: 'Ketchup', prop: 'ketchup'},\n    {label: 'Fry Chefs', prop: 'fryChefs'},\n    {label: 'Night Shift Managers', prop: 'nightShiftManagers'},\n    {label: 'Mass Marketers', prop: 'massMarketers'},\n    {label: 'Rural Marketers', prop: 'ruralMarketers'},\n    {label: 'Gourmet Food Critics', prop: 'gourmetFoodCritics'},\n    {label: 'Movie Stars', prop: 'movieStars'},\n    {label: 'Reserve Prices', prop: 'reservePrices'},\n    {label: 'Hard Choices', prop: 'hardChoices'}\n]\n","import Button from '@material-ui/core/Button'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport React from 'react'\nimport Card from '../../../shared/Card'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport ExpansionModule from './ExpansionModule'\nimport Grid from '@material-ui/core/Grid'\nimport expansionModuleData from './expansionModuleData'\n\nfunction ExpansionModules({modules, onModulesChanged}) {\n    const classes = useStyles()\n    const handleClear = () => onModulesChanged({})\n    const handleInvert = () => {\n        const value = expansionModuleData.reduce((acc, {prop}) => {\n            acc[prop] = !modules[prop]\n            return acc\n        }, {})\n        onModulesChanged(value)\n    }\n    const handleSelectAll = () => {\n        const value = expansionModuleData.reduce((acc, {prop}) => {\n            acc[prop] = true\n            return acc\n        }, {})\n        onModulesChanged(value)\n    }\n\n    return (\n        <Card width='auto' maxWidth={500}>\n            <CardHeader title='Expansion Modules'/>\n            <LabelValueDisplay\n                className={classes.description}\n                dense\n                label='Description'\n                value='Select which modules are in play. This will allow the other helpers to show the correct\n                information. Changing these may reset data in other helpers.'\n            />\n            <CardContent>\n                <Grid container>\n                    {expansionModuleData.map(({label, prop}) =>\n                        <ExpansionModule\n                            key={label}\n                            modules={modules}\n                            setModules={onModulesChanged}\n                            label={label}\n                            prop={prop}\n                        />\n                    )}\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Button color='secondary' onClick={handleClear}>Clear</Button>\n                <FlexSpacer/>\n                <Button onClick={handleInvert}>Invert</Button>\n                <Button onClick={handleSelectAll}>Select All</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    description: {\n        margin: '0 16px 0 16px'\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    leftColumn: {\n        minWidth: 225,\n        marginRight: 12\n    },\n    rightColumn: {\n        minWidth: 225\n    }\n})\n\nexport default ExpansionModules\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nfunction ExpandIcon({open}) {\n    const classes = useStyles()\n    return <ExpandLessIcon className={open ? classes.open : classes.closed}/>\n}\n\nconst useStyles = makeStyles(theme => ({\n    closed: {\n        transition: 'transform .2s',\n        transform: 'rotate(180deg)',\n        color: `${theme.palette.text.primary} !important`\n    },\n    open: {\n        transition: 'transform .2s',\n        transform: 'rotate(0deg)',\n        color: `${theme.palette.text.primary} !important`\n    }\n}))\n\nexport default ExpandIcon\n","export default {\n    byPlayer: {\n        2: {\n            mapSize: '3 x 3',\n            employees: '1',\n            billboards: '#2, #3, #12, #15, #16',\n            reserve: '$100'\n        },\n        3: {\n            mapSize: '3 x 4',\n            employees: '1',\n            billboards: '#2, #3, #15, #16',\n            reserve: '$150'\n        },\n        4: {\n            mapSize: '4 x 4',\n            employees: '2',\n            billboards: '#3, #16',\n            reserve: '$200'\n        },\n        5: {\n            mapSize: '4 x 5',\n            employees: '3',\n            billboards: 'None',\n            reserve: '$250'\n        },\n        6: {\n            mapSize: '4x6 (use New Districts)',\n            employees: '3',\n            billboards: 'None',\n            reserve: '$300'\n        }\n    },\n    byModule: {\n        newDistricts: '5 new map tiles (or 6 if you are playing with lobbyists).',\n        lobbyists: 'Lobbyist employee cards; “First Lobbyist Used” milestone cards; new ' +\n            'road tiles; park tiles; road block markers; optionally, the new city map ' +\n            'tile with two parks. If playing with 5 or 6 players, you will need to also ' +\n            'use the new map tiles.',\n        newMilestones: 'Remove all the milestone cards from the base game. Instead, use the new ' +\n            'milestone cards provided except ketchup, first coffee, first rural marketeer, ' +\n            'and first lobbyist (unless you are also using these modules). Also, take 3 ' +\n            '“Remove after turn 2” markers and the new airplane marketing tiles.',\n        coffee: 'Barista trainee, barista and lead barista employee cards; small restaurant ' +\n            '(coffee shop) counters for each player; wooden coffee pieces; first coffee ' +\n            'sold milestone; additional luxury manager employee card.',\n        kimchi: 'Kimchi master employee cards; wooden kimchi pieces; additional ' +\n            'luxury manager employee card.',\n        sushi: 'Sushi cook and sushi chef employee cards; wooden sushi pieces; ' +\n            'additional luxury manager',\n        noodles: 'Noodle cook and noodle chef employee cards; wooden noodle pieces; ' +\n            'additional luxury manager employee card.',\n        ketchup: 'Ketchup milestone cards “Someone sells your demand”.',\n        fryChefs: 'Fry Chef employee cards.',\n        nightShiftManagers: 'Night shift manager employee cards.',\n        massMarketers: 'Mass marketeer employee cards.',\n        ruralMarketers: 'Rural marketeer employee cards; “First Rural Marketeer used” ' +\n            'milestone cards; rural area tile; giant billboard tiles; highway offramp ' +\n            'tiles “Freeway”.',\n        gourmetFoodCritics: 'Gourmet food critic employee cards; gourmet guide marketing tiles.',\n        movieStars: 'Movie star employee cards. These are unique employees, there is only ' +\n            'one of each available.',\n        reservePrices: '3 new bank reserve cards per player. The bank reserve cards from the ' +\n            'base game are not used.',\n        hardChoices: '5 Milestone depletion markers.'\n    }\n}\n","import {CardActions, Tooltip} from '@material-ui/core'\nimport React, {useMemo, useState} from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport IconButton from '@material-ui/core/IconButton'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandIcon from '../../../nav/ExpandIcon'\nimport Card from '../../../shared/Card'\nimport Dropdown from '../../../shared/Dropdown'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport {makeStyles} from '@material-ui/styles'\nimport setupData from './setupData'\nimport expansionModuleData from '../modules/expansionModuleData'\n\nfunction Setup({modules}) {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n    const [players, setPlayers] = useState(2)\n    const {mapSize, employees, billboards, reserve} = setupData.byPlayer[players]\n\n    const moduleSetup = useMemo(() => {\n        return expansionModuleData\n            .filter(({prop}) => modules[prop])\n            .map(({label, prop}) => ({\n                label,\n                value: setupData.byModule[prop]\n            }))\n    }, [modules])\n\n    const handleExpand = () => setOpen(!open)\n\n    return (\n        <Card width='auto' maxWidth={400}>\n            <CardHeader title='Setup Reference'/>\n            <CardContent>\n                <FormGroup>\n                    <Dropdown\n                        label='Players'\n                        value={players}\n                        onChange={setPlayers}\n                        items={playersMenuItems}\n                    />\n                </FormGroup>\n\n                <Grid container>\n                    <LabelValueDisplay className={classes.playerItem} label='Map Size' value={mapSize}/>\n                    <LabelValueDisplay className={classes.playerItem} label='1x Employees' value={employees}/>\n                    <LabelValueDisplay className={classes.playerItem} label='Billboards Removed' value={billboards}/>\n                    <LabelValueDisplay className={classes.playerItem} label='Reserve' value={reserve}/>\n                </Grid>\n            </CardContent>\n\n            {\n                moduleSetup.length > 0 &&\n                <CardActions>\n                    <Tooltip title='Expand for expansion setup information.' enterDelay={350}>\n                        <IconButton className={classes.expandButton} onClick={handleExpand}>\n                            <ExpandIcon open={open}/>\n                        </IconButton>\n                    </Tooltip>\n                </CardActions>\n            }\n\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    {moduleSetup.map(({label, value}) =>\n                        <LabelValueDisplay\n                            key={label}\n                            className={classes.moduleItem}\n                            label={label}\n                            value={value}\n                        />\n                    )}\n                </CardContent>\n            </Collapse>\n        </Card>\n    )\n}\n\nconst playersMenuItems = Object.keys(setupData.byPlayer)\n    .map(value => ({label: `${value} players`, value}))\n\nconst useStyles = makeStyles({\n    expandButton: {\n        marginLeft: 'auto'\n    },\n    playerItem: {\n        width: 175\n    }\n})\n\nexport default Setup\n","import React, {useCallback, useState} from 'react'\nimport Tabs from '../../shared/Tabs'\nimport useStorageData from '../../shared/useStorageData'\nimport BulkHouseSales from './calc/BulkHouseSales'\nimport SingleHouseSales from './calc/SingleHouseSales'\nimport Milestones from './milestones/Milestones'\nimport ExpansionModules from './modules/ExpansionModules'\nimport Setup from './setup/Setup'\n\nfunction FoodChainMagnate() {\n    // TODO: validate data\n    const {data, onDataUpdate} = useStorageData({localStorageKey})\n    const [modules, setModules] = useState(data.modules || {})\n\n    const handleModulesChanged = useCallback(newModules => {\n        setModules(newModules)\n        onDataUpdate('modules', newModules)\n    }, [onDataUpdate])\n\n    const tabs = [\n        {\n            label: 'Milestones',\n            alwaysRender: false,\n            content: <Milestones\n                data={data}\n                onDataChanged={onDataUpdate}\n                modules={modules}\n            />\n        },\n        {label: 'Single House Sales', content: <SingleHouseSales modules={modules}/>},\n        {label: 'Bulk House Sales', content: <BulkHouseSales modules={modules}/>},\n        {label: 'Setup', content: <Setup modules={modules}/>},\n        {\n            label: 'Modules',\n            content: <ExpansionModules\n                data={data}\n                onDataChanged={onDataUpdate}\n                onDataUpdate={onDataUpdate}\n                modules={modules}\n                onModulesChanged={handleModulesChanged}\n            />\n        }\n    ]\n    return <Tabs title='Food Chain Magnate' tabs={tabs}/>\n}\n\nconst localStorageKey = 'foodChainMagnateData'\n\nexport default FoodChainMagnate\n","export default a => {\n    const index = Math.floor(Math.random() * Math.floor(a.length))\n    const [pick] = a.splice(index, 1)\n    return pick\n}\n","export default {\n    one: [\n        {\n            name: 'Polybog',\n            hp: 3,\n            ini: 2,\n            att: 1,\n            def: 0,\n            types: ['Bog', 'Orc']\n        },\n        {\n            name: 'Grunting Tromper',\n            hp: 4,\n            ini: 3,\n            att: 1,\n            def: 0,\n            types: ['Troll', 'Orc']\n        },\n        {\n            name: 'Stout Raiding',\n            hp: 4,\n            ini: 3,\n            att: 1,\n            def: 0,\n            types: ['Troll', 'Dragon']\n        },\n        {\n            name: 'Troubled Trollbold',\n            hp: 4,\n            ini: 3,\n            att: 1,\n            def: 1,\n            types: ['Troll', 'Dragon']\n        },\n        {\n            name: 'Orc Witness',\n            hp: 4,\n            ini: 3,\n            att: 1,\n            def: 0,\n            types: ['Beast', 'Orc']\n        },\n        {\n            name: 'Swampkin Monkey',\n            hp: 2,\n            ini: 4,\n            att: 2,\n            def: 0,\n            types: ['Bog', 'Beast']\n        },\n        {\n            name: 'Neander Troll',\n            hp: 3,\n            ini: 2,\n            att: 1,\n            def: 1,\n            types: ['Troll', 'Beast']\n        },\n        {\n            name: 'Goblin Firecaster',\n            hp: 1,\n            ini: 4,\n            att: 1,\n            def: 0,\n            types: ['Dragon', 'Goblin']\n        }\n    ],\n    five: [\n        {\n            name: 'Aggressive Geophage',\n            hp: 8,\n            ini: 3,\n            att: 2,\n            def: 1,\n            types: ['Troll', 'Beast']\n        },\n        {\n            name: 'Shadow Keeper',\n            hp: 7,\n            ini: 3,\n            att: 0,\n            def: 1,\n            types: ['Bog', 'Dragon']\n        },\n        {\n            name: 'Sandbaggin\\' Brute',\n            hp: 5,\n            ini: 4,\n            att: 3,\n            def: 1,\n            types: ['Troll', 'Goblin']\n        },\n        {\n            name: 'Sculpted Guru',\n            hp: 6,\n            ini: 4,\n            att: 2,\n            def: 2,\n            types: ['Bog', 'Goblin']\n        },\n        {\n            name: 'Sonar Troll',\n            hp: 4,\n            ini: 3,\n            att: 3,\n            def: 0,\n            types: ['Troll', 'Beast']\n        },\n        {\n            name: 'Miniphage',\n            hp: 4,\n            ini: 4,\n            att: 2,\n            def: 0,\n            types: ['Beast']\n        },\n        {\n            name: 'Wiser Golden Troll Ultra',\n            hp: 5,\n            ini: 2,\n            att: 2,\n            def: 2,\n            types: ['Bog', 'Troll']\n        },\n        {\n            name: 'Feathered Dragon',\n            hp: 7,\n            ini: 5,\n            att: 3,\n            def: 2,\n            types: ['Dragon', 'Beast']\n        }\n    ]\n}\n","import Button from '@material-ui/core/Button'\nimport React, {useMemo, useState} from 'react'\nimport {CardActions, CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '../../../shared/Card'\nimport FlexCol from '../../../shared/FlexCol'\nimport FlexRow from '../../../shared/FlexRow'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport sample from '../../../shared/sample'\nimport data from './data'\n\nfunction BuildATyrant() {\n    const [increment, setIncrement] = useState(0)\n    const {hp, ini, att, def, types, baddies} = useMemo(() => {\n        const onePool = [...data.one]\n        const fivePool = [...data.five]\n        const picked = [sample(onePool), sample(onePool), sample(fivePool), sample(fivePool)]\n        return picked.reduce((acc, val) => {\n            acc.hp = Math.max(acc.hp, val.hp)\n            acc.ini = Math.max(acc.ini, val.ini)\n            acc.att = Math.max(acc.att, val.att)\n            acc.def = Math.max(acc.def, val.def)\n            acc.types = [...acc.types, ...val.types.filter(a => !acc.types.includes(a))]\n            acc.baddies = [...acc.baddies, val.name]\n            return acc\n        }, {hp: 0, ini: 0, att: 0, def: 0, types: [], baddies: [], increment})\n    }, [increment])\n\n    return (\n        <Card width={350}>\n            <CardHeader title=\"Build A Tyrant Splicer\"/>\n            <CardContent>\n                <FlexRow>\n                    <FlexCol width={140}>\n                        <LabelValueDisplay label='HP' value={hp}/>\n                    </FlexCol>\n                    <FlexCol width={140}>\n                        <LabelValueDisplay label='Attack' value={att}/>\n                    </FlexCol>\n                </FlexRow>\n\n                <FlexRow>\n                    <FlexCol width={140}>\n                        <LabelValueDisplay label='Initiative' value={ini}/>\n                    </FlexCol>\n                    <FlexCol width={140}>\n                        <LabelValueDisplay label='Defense' value={def}/>\n                    </FlexCol>\n                </FlexRow>\n\n                <FlexRow>\n                    <FlexCol width={140}>\n                        <LabelValueDisplay label='Baddie Types' value={\n                            types.map(type => <FlexRow>{type}</FlexRow>)\n                        }/>\n                    </FlexCol>\n\n                    <FlexCol width={180}>\n                        <LabelValueDisplay label='Baddies Used' value={\n                            baddies.map(name => <FlexRow>{name}</FlexRow>)\n                        }/>\n                    </FlexCol>\n                </FlexRow>\n            </CardContent>\n            <CardActions>\n                <FlexSpacer/>\n                <Button color=\"primary\" onClick={() => setIncrement(increment + 1)}>\n                    Randomize\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default BuildATyrant\n","export default [\n    'Boomer',\n    'Dart',\n    'Duster',\n    'Gasket',\n    'Ghillie',\n    'Lab Rats',\n    'Nugget',\n    'Patches',\n    'Picket',\n    'Stanza',\n    'Tantrum',\n    'Tink'\n]\n","export default [\n    'Amanight',\n    'Barnacle',\n    'Blobulous',\n    'Build-a-Tyrant',\n    'Drellen',\n    'Duster',\n    'Gendricks',\n    'Goblin King',\n    'Goblin Queen',\n    'Kollossum',\n    'Leech',\n    'Locgear',\n    'Marrow',\n    'Mulmesh',\n    'Nobulous',\n    'Nom',\n    'Oxide',\n    'Vol\\'Kesh'\n]\n","import React, {useMemo, useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport {CardActions, CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport Card from '../../../shared/Card'\nimport Dropdown from '../../../shared/Dropdown'\nimport FlexCol from '../../../shared/FlexCol'\nimport FlexRow from '../../../shared/FlexRow'\nimport FlexSpacer from '../../../shared/FlexSpacer'\nimport LabelValueDisplay from '../../../shared/LabelValueDisplay'\nimport gearlocData from './gearlocData'\nimport tyrantData from './tyrantData'\nimport sample from '../../../shared/sample'\n\nfunction ScenarioRandomizer() {\n    const [increment, setIncrement] = useState(0)\n    const [gearlocCount, setGearlocCount] = useState(2)\n\n    const {gearlocs, tyrant} = useMemo(() => {\n        const gearlocPool = [...gearlocData]\n        const gearlocs = [...Array(gearlocCount)].map(() => sample(gearlocPool))\n        const tyrantPool = [...tyrantData]\n        const tyrant = sample(tyrantPool)\n        return {increment, gearlocs, tyrant}\n    }, [increment, gearlocCount])\n\n    return (\n        <Card width={275}>\n            <CardHeader title=\"Scenario Randomizer\"/>\n            <CardContent>\n                <FormGroup>\n                    <Dropdown label='Gearlocs' value={gearlocCount} onChange={setGearlocCount} items={gearlocMenuItems}/>\n                </FormGroup>\n\n                <FlexRow>\n                    <FlexCol width={120}>\n                        <LabelValueDisplay label='Gearlocs' value={\n                            gearlocs.map(gearloc => <FlexRow>{gearloc}</FlexRow>)\n                        }/>\n                    </FlexCol>\n\n                    <FlexCol width={120}>\n                        <LabelValueDisplay label='Tyrant' value={tyrant}/>\n                    </FlexCol>\n                </FlexRow>\n            </CardContent>\n            <CardActions>\n                <FlexSpacer/>\n                <Button color=\"primary\" onClick={() => setIncrement(increment + 1)}>\n                    Randomize\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst gearlocMenuItems = [1, 2, 3, 4].map(value => ({label: `${value} gearloc(s)`, value}))\n\nexport default ScenarioRandomizer\n","import React from 'react'\nimport Tabs from '../../shared/Tabs'\nimport BuildATyrant from './buildATyrant/BuildATyrant'\nimport ScenarioRandomizer from './scenarioRandomizer/ScenarioRandomizer'\n\nfunction TooManyBones() {\n    const tabs = [\n        {label: 'Scenario Randomizer', content: <ScenarioRandomizer/>},\n        {label: 'Build A Tyrant', content: <BuildATyrant/>}\n    ]\n    return <Tabs title='Too Many Bones' tabs={tabs}/>\n\n}\n\nexport default TooManyBones\n","import Barenpark from './barenpark/Barenpark'\nimport FoodChainMagnate from './foodChainMagnate/FoodChainMagnate'\nimport TooManyBones from './tooManyBones/TooManyBones'\n\nexport default [\n    {name: 'Bärenpark', path: '/barenpark', component: Barenpark},\n    {name: 'Food Chain Magnate', path: '/foodChainMagnate', component: FoodChainMagnate},\n    {name: 'Too Many Bones', path: '/tooManyBones', component: TooManyBones}\n]\n","import {CardHeader} from '@material-ui/core'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport Card from '../shared/Card'\n\nfunction Home() {\n    return (\n        <Card>\n            <CardHeader title='Welcome!'/>\n            <CardContent>\n                <Typography>\n                    Welcome to BGHelper!\n\n                    Select a game in the menu to the left or search for one above.\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Home\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Dialog from '@material-ui/core/Dialog'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport {useHistory} from 'react-router-dom'\nimport games from '../games/games'\n\nfunction SiteSearch() {\n    const classes = useStyles()\n    const history = useHistory()\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [value, setValue] = useState(null)\n    const openDialog = () => setDialogOpen(true)\n    const closeDialog = () => setDialogOpen(false)\n    const autocomplete = useRef(null)\n\n    const handleKeyUp = useCallback(event => {\n        if (event.key === '.' && !excludedTags.includes(event.target.tagName)) {\n            openDialog()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (dialogOpen && autocomplete && autocomplete.current) {\n            setTimeout(() => autocomplete.current.focus(), 125)\n        }\n    }, [dialogOpen, autocomplete])\n\n    useEffect(() => {\n        document.addEventListener('keyup', handleKeyUp)\n        return () => document.removeEventListener('keyup', handleKeyUp)\n    }, [handleKeyUp])\n\n    const handleChange = (event, value) => {\n        if (value) {\n            history.push(value.path)\n            setValue(null)\n            closeDialog()\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Tooltip title='Site Search'>\n                <IconButton onClick={openDialog}>\n                    <SearchIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <Dialog\n                keepMounted\n                open={dialogOpen}\n                onClose={closeDialog}\n                classes={{\n                    paper: classes.dialogPaper,\n                    root: classes.dialogRoot\n                }}\n            >\n                <Autocomplete\n                    className={classes.autocomplete}\n                    autoComplete\n                    autoHightlight\n                    clearOnEscape\n                    options={games}\n                    value={value}\n                    onChange={handleChange}\n                    onClose={closeDialog}\n                    getOptionLabel={option => option.name}\n                    renderInput={params => (\n                        <TextField\n                            {...params}\n                            label='Site Search'\n                            variant='outlined'\n                            fullWidth\n                            inputRef={autocomplete}\n                        />\n                    )}\n                    classes={{\n                        popup: classes.popup\n                    }}\n                />\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nconst excludedTags = [\n    'INPUT',\n    'TEXTAREA',\n    'SELECT'\n]\n\nconst useStyles = makeStyles({\n    autocomplete: {\n        width: 300\n    },\n    dialogPaper: {\n        overflowY: 'visible'\n    },\n    dialogRoot: {\n        top: '48px !important',\n        bottom: 'unset !important'\n    },\n    popup: {\n        zIndex: 1301\n    }\n})\n\nexport default SiteSearch\n","import React, {useContext, useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport games from '../games/games'\nimport TitleContext from '../shared/TitleContext'\nimport ExpandIcon from './ExpandIcon'\nimport githubSvg from './github.svg'\nimport {makeStyles} from '@material-ui/styles'\nimport {Link} from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport HomeIcon from '@material-ui/icons/Home'\nimport BuildIcon from '@material-ui/icons/Build'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport SiteSearch from './SiteSearch'\n\nfunction Nav() {\n    const classes = useStyles()\n    const {title} = useContext(TitleContext)\n    const [expandedMenu, setExpandedMenu] = useState(null)\n    const [drawerOpen, setDrawerOpen] = useState(false)\n\n    const openDrawer = () => setDrawerOpen(true)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    const handleExpand = value => () => setExpandedMenu(expandedMenu === value ? null : value)\n\n    return (\n        <React.Fragment>\n            <AppBar position='static'>\n                <Toolbar className={classes.toolbar}>\n                    {/* Menu button */}\n                    <IconButton className={classes.menuButton} onClick={openDrawer}>\n                        <MenuIcon/>\n                    </IconButton>\n\n                    {/* Title bar */}\n                    <Typography variant='h6' className={classes.title}>\n                        {title}\n                    </Typography>\n\n                    {/* Search */}\n                    <SiteSearch/>\n\n                    {/* Top right icons */}\n                    <Tooltip title='Contribute on GitHub!'>\n                        <IconButton target='_blank' href='https://github.com/NiXXeD/bghelper'>\n                            <img alt='github link' width='24' height='24' src={githubSvg}/>\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n\n            {/* Left Drawer*/}\n            <SwipeableDrawer open={drawerOpen} onOpen={openDrawer} onClose={closeDrawer} classes={{paper: classes.drawerPaper}}>\n                <Link className={classes.link} to='/'>\n                    <ListItem button onClick={closeDrawer}>\n                        <ListItemIcon><HomeIcon/></ListItemIcon>\n                        <ListItemText primary='Home'/>\n                    </ListItem>\n                </Link>\n\n                <Divider/>\n\n                <List>\n                    {/* Games list */}\n                    <ListItem button onClick={handleExpand('games')}>\n                        <ListItemIcon><ExtensionIcon/></ListItemIcon>\n                        <ListItemText primary='Games'/>\n                        <ExpandIcon open={expandedMenu === 'games'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'games'} timeout='auto'>\n                        {games.map(({path, name}) =>\n                            <Link key={path} className={classes.link} to={path}>\n                                <ListItem className={classes.nested} button onClick={closeDrawer}>\n                                    <ListItemText primary={name}/>\n                                </ListItem>\n                            </Link>\n                        )}\n                    </Collapse>\n\n                    {/* Utilities */}\n                    <ListItem button onClick={handleExpand('utils')}>\n                        <ListItemIcon><BuildIcon/></ListItemIcon>\n                        <ListItemText primary='Utilities'/>\n                        <ExpandIcon open={expandedMenu === 'utils'}/>\n                    </ListItem>\n                    <Collapse in={expandedMenu === 'utils'} timeout='auto'>\n                        <ListItem className={classes.nested} button onClick={closeDrawer}>\n                            <ListItemText primary='TBD'/>\n                        </ListItem>\n                    </Collapse>\n                </List>\n            </SwipeableDrawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    drawerPaper: {\n        width: 225\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n}))\n\nexport default Nav\n","import React, {useCallback, useMemo, useState} from 'react'\nimport TitleContext from './TitleContext'\n\nfunction TitleContextProvider({children}) {\n    const [title, setTitle] = useState(defaultTitle)\n    const clearTitle = useCallback(() => setTitle(defaultTitle), [])\n    const value = useMemo(() => ({title, setTitle, clearTitle}), [title, clearTitle])\n\n    return (\n        <TitleContext.Provider value={value}>\n            {children}\n        </TitleContext.Provider>\n    )\n}\n\nconst defaultTitle = 'Board Game Helper'\n\nexport default TitleContextProvider\n","import React from 'react'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {HashRouter, Route} from 'react-router-dom'\nimport games from './games/games'\nimport Home from './nav/Home'\nimport Nav from './nav/Nav'\nimport TitleContextProvider from './shared/TitleContextProvider'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider theme={theme}>\n                <TitleContextProvider>\n                    <div>\n                        <Nav/>\n\n                        <Route exact path=\"/\"><Home/></Route>\n\n                        {/* Game routes*/}\n                        {games.map(({path, component: Component}) =>\n                            <Route exact path={path} key={path}>\n                                <Component/>\n                            </Route>\n                        )}\n                    </div>\n                </TitleContextProvider>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready\n                    .then(() => {\n                        console.log(\n                            'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                        )\n                    })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload()\n                        })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => registration.unregister())\n    }\n}\n"],"sourceRoot":""}